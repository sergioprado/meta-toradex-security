From cfd966e29746853bfcf92ff2a1ef3ed6d545b5d0 Mon Sep 17 00:00:00 2001
From: Rogerio Guerra Borin <rogerio.borin@toradex.com>
Date: Mon, 28 Aug 2023 13:29:34 -0300
Subject: [PATCH 1/5] toradex: integrate command whitelisting (downstream)

Integrate the command whitelisting feature which is part of the Secure
Boot hardening on U-Boot made by Toradex. The feature allows categories
of commands to be enabled/disabled depending on whether the device is
in open/closed state related to HAB/AHAB; the selection of allowed and
denied categories is taken from the control DTB having also hard-coded
sane defaults.

Upstream-Status: Inappropriate [TorizonCore specific]

Signed-off-by: Rogerio Guerra Borin <rogerio.borin@toradex.com>
---
 Kconfig          | 28 ++++++++++++++++++++++++++++
 common/Makefile  |  2 ++
 common/command.c |  5 +++++
 3 files changed, 35 insertions(+)

diff --git a/Kconfig b/Kconfig
index 0b00696198a..badab0318d6 100644
--- a/Kconfig
+++ b/Kconfig
@@ -742,3 +742,31 @@ source "lib/Kconfig"
 source "test/Kconfig"
 
 source "tools/Kconfig"
+
+config TDX_SECBOOT_HARDENING
+	bool "Toradex Secure Boot hardening"
+	select TDX_CMD_WHITELIST
+	help
+	  This causes the Secure Boot hardening features added by Toradex
+	  to be built into U-Boot, including:
+
+	  - Command white-listing.
+	  - Protection against execution of unsigned software by "bootm".
+	  - CLI access prevention (when device is closed).
+	  - Kernel command line protection.
+
+	  Whether these features are active or not will depend on the runtime
+	  configuration stored in the control DTB.
+
+config TDX_SECBOOT_HARDENING_DBG
+	bool "Toradex Secure Boot hardening debugging support"
+	depends on TDX_SECBOOT_HARDENING
+	default n
+	help
+	  Add some extra commands to help debug the U-Boot hardening changes
+	  made by Toradex. This should never be enabled in production!
+
+config TDX_CMD_WHITELIST
+	bool
+	help
+	  Enable the command white-listing feature provided by Toradex.
diff --git a/common/Makefile b/common/Makefile
index a83dcbee81e..8317e002ff0 100644
--- a/common/Makefile
+++ b/common/Makefile
@@ -24,6 +24,8 @@ obj-$(CONFIG_DISPLAY_BOARDINFO_LATE) += board_info.o
 obj-$(CONFIG_MII) += miiphyutil.o
 obj-$(CONFIG_CMD_MII) += miiphyutil.o
 obj-$(CONFIG_PHYLIB) += miiphyutil.o
+obj-$(CONFIG_TDX_SECBOOT_HARDENING) += tdx-harden.o
+obj-$(CONFIG_TDX_CMD_WHITELIST) += whitelist.o
 
 obj-$(CONFIG_USB_HOST) += usb.o usb_hub.o
 obj-$(CONFIG_USB_GADGET) += usb.o
diff --git a/common/command.c b/common/command.c
index af8ffdba8f8..7268bfd9e7d 100644
--- a/common/command.c
+++ b/common/command.c
@@ -18,6 +18,7 @@
 #include <mapmem.h>
 #include <asm/global_data.h>
 #include <linux/ctype.h>
+#include <tdx-harden.h>
 
 DECLARE_GLOBAL_DATA_PTR;
 
@@ -578,6 +579,10 @@ static int cmd_call(struct cmd_tbl *cmdtp, int flag, int argc,
 {
 	int result;
 
+#ifdef CONFIG_TDX_CMD_WHITELIST
+	if (!cmd_allowed_by_whitelist(cmdtp, argc, argv))
+		return CMD_RET_FAILURE;
+#endif
 	result = cmdtp->cmd_rep(cmdtp, flag, argc, argv, repeatable);
 	if (result)
 		debug("Command failed, result=%d\n", result);
-- 
2.25.1

