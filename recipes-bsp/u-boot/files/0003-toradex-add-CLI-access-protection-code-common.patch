From df7c19333e0aacdcfa7c43e7e2e8d1f927f3b2ce Mon Sep 17 00:00:00 2001
From: Rogerio Guerra Borin <rogerio.borin@toradex.com>
Date: Wed, 16 Oct 2024 17:43:42 -0300
Subject: [PATCH 3/5] toradex: add CLI access protection code (common)

Add the common code (i.e. shared by all branches of U-Boot where the
hardening might be used) to support the hardening feature called "CLI
access protection", without integrating it. The integration is left to
separate commits handling specific cases (upstream, downstream and
possibly others).

Upstream-Status: Inappropriate [TorizonCore specific]

Signed-off-by: Rogerio Guerra Borin <rogerio.borin@toradex.com>
---
 common/tdx-harden.c  | 55 ++++++++++++++++++++++++++++++++++++++++++++
 include/tdx-harden.h |  5 +++-
 2 files changed, 59 insertions(+), 1 deletion(-)

diff --git a/common/tdx-harden.c b/common/tdx-harden.c
index 789d1ed1285..dbdb8c5e337 100644
--- a/common/tdx-harden.c
+++ b/common/tdx-harden.c
@@ -6,6 +6,7 @@
 #include <common.h>
 #include <compiler.h>
 #include <command.h>
+#include <console.h>
 #include <log.h>
 #include <fdt_support.h>
 #include <asm/global_data.h>
@@ -160,6 +161,55 @@ int tdx_secboot_dev_is_open(void)
 	return dev_open;
 }
 
+#ifdef CONFIG_TDX_CLI_PROTECTION
+/**
+ * tdx_cli_access_enabled - Determine if U-Boot CLI access is to be enabled
+ * Return: 1 if CLI access is to be enabled or 0 otherwise.
+ */
+int tdx_cli_access_enabled(void)
+{
+	const void *en_prop;
+	int secboot_offset, prop_len;
+
+	if (!tdx_hardening_enabled())
+		return 1;
+	if (tdx_secboot_dev_is_open())
+		return 1;
+	if (!gd->fdt_blob)
+		return 1;	/* no hardening */
+
+	secboot_offset = fdt_path_offset(gd->fdt_blob, secboot_node_path);
+	if (secboot_offset < 0)
+		return 1;	/* no hardening */
+
+	/* Hardening is enabled and device is closed: CLI access should be
+	   disabled unless the control DTB says otherwise: check it.  */
+	en_prop = fdt_getprop(gd->fdt_blob, secboot_offset,
+			       "enable-cli-when-closed", &prop_len);
+	if (en_prop) {
+		debug("U-Boot CLI access enabled by property (len=%d)\n",
+		      prop_len);
+		return 1;
+	}
+
+	debug("U-Boot CLI access disabled\n");
+	return 0;
+}
+
+void tdx_secure_boot_cmd(const char *cmd)
+{
+	int rc;
+
+	printf("## U-Boot CLI access is disabled due to Secure Boot\n");
+
+	disable_ctrlc(1);
+	rc = run_command_list(cmd, -1, 0);
+
+	panic("## ERROR: \"%s\" returned (code %d) and CLI access is "
+	      "disabled\n", cmd, rc);
+}
+#endif
+
 static int hardening_info(void)
 {
 	int hdn_enabled = tdx_hardening_enabled();
@@ -258,3 +308,8 @@ U_BOOT_CMD(hardening, 5, 0, do_hardening,
  * U-Boot configuration is wrong. */
 #error Toradex hardening assumes CONFIG_LMB is set
 #endif
+
+#ifdef CONFIG_UPDATE_TFTP
+/* Self-updates are likely not safe. */
+#error Toradex hardening assumes CONFIG_UPDATE_TFTP is not set
+#endif
diff --git a/include/tdx-harden.h b/include/tdx-harden.h
index dfdaa69d3a4..50e850ba2af 100644
--- a/include/tdx-harden.h
+++ b/include/tdx-harden.h
@@ -12,6 +12,8 @@
  *     chosen {
  *         toradex,secure-boot {    [if not present: disable Toradex hardening]
  *             disabled;                  [optional: disable Toradex hardening]
+ *             enable-cli-when-closed; [optional: keep u-boot cli enabled when]
+                                                          [...device is closed]
  *             bootloader-commands {
  *                 allow-open = <CMD_CAT_ALL>;
  *                 allow-closed = <CMD_CAT_NEEDED CMD_CAT_SAFE>;
@@ -35,8 +37,9 @@
 struct cmd_tbl;
 
 int cmd_allowed_by_whitelist(struct cmd_tbl *cmd, int argc, char *const argv[]);
-
 int tdx_secboot_dev_is_open(void);
 int tdx_hardening_enabled(void);
+int tdx_cli_access_enabled(void);
+void tdx_secure_boot_cmd(const char *cmd);
 
 #endif	/* __TDX_HARDEN_H */
-- 
2.25.1

